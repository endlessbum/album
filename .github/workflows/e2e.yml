name: E2E

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build app
        run: npm run -s build
        env:
          NODE_ENV: production

      - name: Start server
        run: |
          npm start &
          echo "Waiting for server..."
          npx wait-on http://127.0.0.1:5001
        env:
          NODE_ENV: production
          PORT: 5001

      - name: Run E2E
        env:
          PLAYWRIGHT_BASE_URL: http://127.0.0.1:5001
        run: npm run -s e2e

      # Загружаем HTML-отчет Playwright как артефакт (всегда)
      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: warn

      # При падениях — дополнительно загружаем raw-артефакты (traces, скриншоты)
      - name: Upload Playwright test-results (raw)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: test-results
          if-no-files-found: warn

  # Отдельная быстрая проверка доступности (axe) — можно запускать параллельно с e2e
  a11y:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build app
        run: npm run -s build
        env:
          NODE_ENV: production

      - name: Start server
        run: |
          npm start &
          echo "Waiting for server..."
          npx wait-on http://127.0.0.1:5001
        env:
          NODE_ENV: production
          PORT: 5001

      - name: Run a11y-smoke only
        env:
          PLAYWRIGHT_BASE_URL: http://127.0.0.1:5001
        run: npm run -s e2e -- -g "^a11y:"

      - name: Upload Playwright HTML report (a11y)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-a11y
          path: playwright-report
          if-no-files-found: warn

      - name: Upload Playwright test-results (raw, a11y)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results-a11y
          path: test-results
          if-no-files-found: warn
